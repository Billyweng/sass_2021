@import "_reset.scss";
@import "_variable.scss";

html {
    height: 100%;
    body {
        font-family: "Microsoft JhengHei", "Helvetica Neue", Helvetica, Arial, sans-serif;
        touch-action: manipulation;
        height: 100%;
    }
}

/*在這邊*/

@mixin flexBox($direction, $alignItems, $justifyContent) {
    /*這串是把每一個細項變數整合成一個mixin，然後像是display 是不變的也可以直接打在裡面，方便後面不需要再多打一次
    打法   < @mixin "變數命名" (細項變數) >*/
    display: flex;
    flex-direction: $direction;
    align-items: $alignItems;
    justify-content: $justifyContent;
}

@mixin boxSizing {
    box-sizing: border-box;
}

/*每一個 mixin 都對應一個 include*/

.container {
    @include flexBox(column, flex-start, flex-start);
    /*include flexBox()這段裡面的內容是去設定裡面宣告出來的變數內容*/
    @include boxSizing;
    padding: 1rem;
    background-color: $lightGay;
    &::before {
        content: "";
        display: block;
        width: 20px;
        height: 20px;
        border-radius: 50%;
        background: #f90;
    }


    @for $i from 0 through 4 {
    /*這邊的for迴圈是去創作出一個data-inset的迴圈 這樣html 裡面可以直接使用data-inset去做參數變化而不用再回到 css 去個別設定*/ 
     
        &[data-inset="#{$i * 0.5}rem"] {
            padding: $i * 0.5rem;
        }
    }
}

.grid {
    @extend .container;
    /*@extend 沿用的概念 這邊 .grid 這個class 沿用了.container 裡面所有的設定參數*/

    padding: 0.5rem;
    justify-content: space-between;
}